import yaml
import json 
import base64
import requests
import sys

in_file = "base-wf-template.json"
out_file = "template.yaml" 

def generateWorkflow(json_decoded: dict)-> any:
    # with open(in_file, 'r') as json_in, open(out_file, "w") as yaml_out:
        # json_payload = json.load(json_decoded)
        template_yaml = yaml.dump(json_decoded, sort_keys=False)
        base64_encoded_data = base64.b64encode(bytes(template_yaml, "utf-8"))
        base64_str = base64_encoded_data.decode('utf-8')

    # with open(out_file, 'w') as filehandle:
    #     filehandle.write(template_yaml)
        return base64_str

def generateRepository(user_request: dict):
    response = requests.post(
        "https://api.github.com/user/repos",
        data=json.dumps({"name":user_request["repository_name"]}),
        headers={"Accept":"application/vnd.github+json","Authorization":"Bearer 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"},
    )
    print(response)

def createWorkflowFile(user_request: dict, base64_encoded_data: any):
    # Generate workflow actions file
    response_for_template_creation = requests.put(
        "https://api.github.com/repos/"+user_request["repository_user"]+"/"+user_request["repository_name"]+"/contents/.github/workflows/"+user_request["repository_name"]+"-actions.yaml",
        data=json.dumps({"message":"Template generated by template generator","committer":{"name":user_request['repository_user'],"email":user_request['email']},"content":base64_encoded_data}),
        headers={"Accept":"application/vnd.github+json","Authorization":"Bearer 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"},
    )
    print(response_for_template_creation)


def createApplicationTemplate(user_request: dict, base64_encoded_application_source: any):
    response_for_application_template = requests.put(
        "https://api.github.com/repos/"+user_request["repository_user"]+"/"+user_request["repository_name"]+"/contents/app/Dockerfile",
        data=json.dumps({"message":"Template generated by template generator","committer":{"name":user_request['repository_user'],"email":user_request['email']},"content":base64_encoded_application_source}),
        headers={"Accept":"application/vnd.github+json","Authorization":"Bearer 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"},
    )
    print(response_for_application_template)

def updateJson(input: dict)-> any:
    with open(in_file) as json_file:
        json_decoded = json.load(json_file)

    json_decoded['env']['namespace'] = input["namespace_name"]
    return json_decoded
    # with open(in_file, 'w') as json_file:
    #     json.dump(json_decoded, json_file)


# This function generates hash of template path, commits and push to user repository
def encode_source_code_template():
    with open("Dockerfile", 'r') as app_code:
        base64_encoded_data = base64.b64encode(bytes(app_code.read(), "utf-8"))
        base64_str = base64_encoded_data.decode('utf-8')
        return base64_str


if __name__ == '__main__':  
    # user_request = sys.argv
    user_request = {"repository_user": "mayankagarwal19911", "email":"mayank.agarwal19911@gmail.com",'repository_name':'lbg-statestreet-mortgage','client_id':'7500907','namespace_name':'statestreet_mortgage','template_repository_path':'https://github.com/learnk8s/docker-hello-world','description':'Borrower and Loan Use Description.'}
    # print(user_request)
    json_decoded = updateJson(user_request)
    # print(json_decoded)
    base64_encoded_workflow_data = generateWorkflow(json_decoded)
    # print(base64_encoded_workflow_data)
    base64_encoded_application_source = encode_source_code_template()
    generateRepository(user_request)
    createWorkflowFile(user_request, base64_encoded_workflow_data)
    createApplicationTemplate(user_request, base64_encoded_application_source)
